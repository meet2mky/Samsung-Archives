// Aeroplane Game.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <algorithm>
using namespace std;
const int N = 15;
const int M = 5;
int a[N][M];
int b[N][M];
// first the grid moves on step down then spaceship can move left or right
void detonate(int row) {
	for (int i = row; i >= max(0, row - 4); i--) {
		for (int j = 0; j < 5; j++) {
			b[i][j] = a[i][j];
			if (a[i][j] == 2)a[i][j] = 0;
		}
	}
	
}
void undetonate(int row) {
	for (int i = row; i >= max(0, row - 4); i--) {
		for (int j = 0; j < 5; j++) {
			a[i][j] = b[i][j];
		}
	}
}
void findMax(int pos, int n, int coins, int& maxcoins) {
	if (pos < 0 || pos > 4 || coins < 0) return;
	if (a[n - 1][pos] == 2) coins -= 1;
	if (a[n - 1][pos] == 1) coins += 1;
	if (n == 1) {
		maxcoins = max(coins, maxcoins);
		return;
	}
	else {
		findMax(pos - 1, n - 1, coins, maxcoins);
		findMax(pos + 1, n - 1, coins, maxcoins);
		findMax(pos, n - 1, coins, maxcoins);
	}
}
int main()
{
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < 5; j++) {
				cin >> a[i][j];
			}
		}
		for (int j = 0; j < 5; j++) {
			a[n][j] = 0;
		}
		a[n][2] = 3; // spaceship
		int globalMaxCoins = -1, localMaxCoins;
		for (int j = n - 1; j  > 0; j--) {
			detonate(j);
			localMaxCoins = -1;
			findMax(2, n, 0, localMaxCoins);
			globalMaxCoins = max(globalMaxCoins, localMaxCoins);
			undetonate(j);
		}
		cout << globalMaxCoins << endl;
	}
	return 0;
}
