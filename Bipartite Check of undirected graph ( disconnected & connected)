#include <iostream>
#include <vector>
using namespace std;
const int N = 1e5 + 10;
vector<int> g[N];
vector<int> color(N, -1);
int n, m, u, v;
bool notok = false;
void bipartite(int u) {
	for (auto x : g[u]) {
		if (color[x] == -1) {
			color[x] = color[u] ^ 1;
			bipartite(x);
		}
		else {
			if (color[x] != (color[u] ^ 1)) {
				notok = true;
				return;
			}
		}
	}
}
int main()
{
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		cin >> u >> v;
		g[u].push_back(v);
		g[v].push_back(u);
	}
	for (int i = 1; i <= n; i++) {
		if (color[i] == -1) {
			color[i] = 0;
			bipartite(i);
		}
	}
	if (notok) {
		cout << -1 << endl;
		return 0;
	}
	for (int i = 1; i <= n; i++) {
		if (color[i] == 0) cout << i << ' ';
	}
	cout << endl;
	for (int i = 1; i <= n; i++) {
		if (color[i] == 1)cout << i << ' ';
	}
	cout << endl;
	return 0;
}
