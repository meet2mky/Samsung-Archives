#include <iostream>
#include <vector>
#include <queue>
using namespace std;
int main()
{
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		vector<bool> vis(n, false);
		string rooms(n, '_');
		priority_queue<pair<int, int> > pq;
		// {length,start} in priority_queue
		pq.push({ n, 0 });
		int cnt = 0;
		while (!pq.empty()) {
			pair<int, int> curr = pq.top();
			pq.pop();
			int l = curr.second;
			int r = l + curr.first - 1;
			if (r < l)continue;
			if (r == l) {
				rooms[r] = 'X';
				cout << rooms << endl;
				continue;
			}
			int m = (l + r) / 2;
			rooms[m] = 'X';
			cout << rooms << endl;
			pq.push({ m-1 - l + 1,l});
			pq.push({ r - (m+1) + 1,m + 1});
		}
		cout << endl;
	}
	return 0;
}
